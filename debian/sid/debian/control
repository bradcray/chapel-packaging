Source: chapel-1.16
Section: devel
Priority: optional
Maintainer: Ben Albrecht <balbrecht@cray.com>
Build-Depends:
 debhelper (>= 10),
 python
Standards-Version: 3.9.8
Homepage: http://chapel.cray.com/
Vcs-Git: https://github.com/chapel-lang/chapel-packaging.git
Vcs-Browser: https://github.com/chapel-lang/chapel-packaging

Package: chapel-1.16
Architecture: any
Depends:
 ${misc:Depends},
 chapel-common-1.16,
 chapel-compiler-1.16,
 chapel-runtime-1.16
Suggests: chapel-doc-1.16
Description: productive parallel computing
 Chapel is an emerging programming language designed for productive parallel
 computing at scale.
 .
 Chapel's design and implementation have been undertaken with portability in
 mind, permitting Chapel to run on multicore desktops and laptops, commodity
 clusters, and the cloud, in addition to the high-end supercomputers for which
 it was designed. Chapel's design and development are being led by Cray Inc.
 in collaboration with academia, computing centers, and industry.
 .
 This package is a metapackage that installs the Chapel compiler and
 runtime.

Package: chapel-common-1.16
Architecture: all
Depends:
 ${misc:Depends},
 python:any (<< 2.8), python:any (>= 2.7~),
Description: productive parallel computing (common files)
 Chapel is an emerging programming language designed for productive parallel
 computing at scale.
 .
 Chapel's design and implementation have been undertaken with portability in
 mind, permitting Chapel to run on multicore desktops and laptops, commodity
 clusters, and the cloud, in addition to the high-end supercomputers for which
 it was designed. Chapel's design and development are being led by Cray Inc.
 in collaboration with academia, computing centers, and industry.
 .
 This package contains Chapel modules and scripts supporting compilation.

Package: chapel-compiler-1.16
Architecture: any
Depends:
 ${shlibs:Depends},
 ${misc:Depends},
 python:any (<< 2.8), python:any (>= 2.7~),
 build-essential
Description: productive parallel computing (compiler)
 Chapel is an emerging programming language designed for productive parallel
 computing at scale.
 .
 Chapel's design and implementation have been undertaken with portability in
 mind, permitting Chapel to run on multicore desktops and laptops, commodity
 clusters, and the cloud, in addition to the high-end supercomputers for which
 it was designed. Chapel's design and development are being led by Cray Inc.
 in collaboration with academia, computing centers, and industry.
 .
 This package provides the Chapel compiler. It does not include the
 LLVM integration.  It functions by generating C code and then running
 the system C compiler.

Package: chapel-runtime-1.16
Architecture: any
Depends:
 ${shlibs:Depends},
 ${misc:Depends},
Description: productive parallel computing (runtime)
 Chapel is an emerging programming language designed for productive parallel
 computing at scale.
 .
 Chapel's design and implementation have been undertaken with portability in
 mind, permitting Chapel to run on multicore desktops and laptops, commodity
 clusters, and the cloud, in addition to the high-end supercomputers for which
 it was designed. Chapel's design and development are being led by Cray Inc.
 in collaboration with academia, computing centers, and industry.
 .
 This package provides a minimal "quickstart" version of the Chapel runtime.

Package: chapel-doc-1.16
Architecture: all
Section: doc
Depends: ${misc:Depends},
Suggests: chapel-1.16
Description: productive parallel computing (documentation)
 Chapel is an emerging programming language designed for productive parallel
 computing at scale.
 .
 Chapel's design and implementation have been undertaken with portability in
 mind, permitting Chapel to run on multicore desktops and laptops, commodity
 clusters, and the cloud, in addition to the high-end supercomputers for which
 it was designed. Chapel's design and development are being led by Cray Inc.
 in collaboration with academia, computing centers, and industry.
 .
 This package includes Chapel documentation.
